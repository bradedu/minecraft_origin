From 35d19e7a2471b139ac68e8a6cd48b58312749784 Mon Sep 17 00:00:00 2001
From: erocs <github@erocs.org>
Date: Sun, 8 Sep 2013 12:06:15 -0700
Subject: [PATCH] Hopper Customisations

Allows editing hopper cooldowns and amount transferred per tick.

diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index e452d8388..d28754441 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -114,9 +114,14 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
             this.j = this.world.getTime();
             if (!this.E()) {
                 this.setCooldown(0);
-                this.a(() -> {
+                // Spigot start
+                boolean result = this.a(() -> {
                     return a((IHopper) this);
                 });
+                if (!result && this.world.spigotConfig.hopperCheck > 1) {
+                    this.setCooldown(this.world.spigotConfig.hopperCheck);
+                }
+                // Spigot end
             }
 
         }
@@ -136,7 +141,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                 }
 
                 if (flag) {
-                    this.setCooldown(8);
+                    this.setCooldown(world.spigotConfig.hopperTransfer); // Spigot
                     this.update();
                     return true;
                 }
@@ -201,7 +206,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                         // ItemStack itemstack1 = addItem(this, iinventory, this.splitStack(i, 1), enumdirection);
 
                         // CraftBukkit start - Call event when pushing items into other inventories
-                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(this.splitStack(i, 1));
+                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(this.splitStack(i, world.spigotConfig.hopperAmount)); // Spigot
 
                         Inventory destinationInventory;
                         // Have to special case large chests as they work oddly
@@ -215,9 +220,10 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                         this.getWorld().getServer().getPluginManager().callEvent(event);
                         if (event.isCancelled()) {
                             this.setItem(i, itemstack);
-                            this.setCooldown(8); // Delay hopper checks
+                            this.setCooldown(world.spigotConfig.hopperTransfer); // Spigot
                             return false;
                         }
+                        int origCount = event.getItem().getAmount(); // Spigot
                         ItemStack itemstack1 = addItem(this, iinventory, CraftItemStack.asNMSCopy(event.getItem()), enumdirection);
                         // CraftBukkit end
 
@@ -226,6 +232,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                             return true;
                         }
 
+                        itemstack.subtract(origCount - itemstack1.getCount()); // Spigot
                         this.setItem(i, itemstack);
                     }
                 }
@@ -346,7 +353,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
             ItemStack itemstack1 = itemstack.cloneItemStack();
             // ItemStack itemstack2 = addItem(iinventory, ihopper, iinventory.splitStack(i, 1), (EnumDirection) null);
             // CraftBukkit start - Call event on collection of items from inventories into the hopper
-            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.splitStack(i, 1));
+            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.splitStack(i, ihopper.getWorld().spigotConfig.hopperAmount)); // Spigot
 
             Inventory sourceInventory;
             // Have to special case large chests as they work oddly
@@ -363,13 +370,13 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                 iinventory.setItem(i, itemstack1);
 
                 if (ihopper instanceof TileEntityHopper) {
-                    ((TileEntityHopper) ihopper).setCooldown(8); // Delay hopper checks
+                    ((TileEntityHopper) ihopper).setCooldown(ihopper.getWorld().spigotConfig.hopperTransfer); // Spigot
                 } else if (ihopper instanceof EntityMinecartHopper) {
-                    ((EntityMinecartHopper) ihopper).setCooldown(4); // Delay hopper minecart checks
+                    ((EntityMinecartHopper) ihopper).setCooldown(ihopper.getWorld().spigotConfig.hopperTransfer / 2); // Spigot
                 }
-
                 return false;
             }
+            int origCount = event.getItem().getAmount(); // Spigot
             ItemStack itemstack2 = addItem(iinventory, ihopper, CraftItemStack.asNMSCopy(event.getItem()), null);
             // CraftBukkit end
 
@@ -378,6 +385,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                 return true;
             }
 
+            itemstack1.subtract(origCount - itemstack2.getCount()); // Spigot
             iinventory.setItem(i, itemstack1);
         }
 
@@ -468,7 +476,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                             }
                         }
 
-                        tileentityhopper.setCooldown(8 - b0);
+                        tileentityhopper.setCooldown(tileentityhopper.world.spigotConfig.hopperTransfer - b0); // Spigot
                     }
                 }
 
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index 79ba906e2..62b75e33a 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -174,4 +174,20 @@ public class SpigotWorldConfig
         otherTrackingRange = getInt( "entity-tracking-range.other", otherTrackingRange );
         log( "Entity Tracking Range: Pl " + playerTrackingRange + " / An " + animalTrackingRange + " / Mo " + monsterTrackingRange + " / Mi " + miscTrackingRange + " / Other " + otherTrackingRange );
     }
+
+    public int hopperTransfer;
+    public int hopperCheck;
+    public int hopperAmount;
+    private void hoppers()
+    {
+        // Set the tick delay between hopper item movements
+        hopperTransfer = getInt( "ticks-per.hopper-transfer", 8 );
+        if ( SpigotConfig.version < 11 )
+        {
+            set( "ticks-per.hopper-check", 1 );
+        }
+        hopperCheck = getInt( "ticks-per.hopper-check", 1 );
+        hopperAmount = getInt( "hopper-amount", 1 );
+        log( "Hopper Transfer: " + hopperTransfer + " Hopper Check: " + hopperCheck + " Hopper Amount: " + hopperAmount );
+    }
 }
-- 
2.19.1

